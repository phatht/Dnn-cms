<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_feedback lists.Text" xml:space="preserve">
    <value>Quản lý danh sách phản hồi</value>
  </data>
  <data name="plListType.Text" xml:space="preserve">
    <value> Loại danh sách</value>
  </data>
  <data name="plListType.Help" xml:space="preserve">
    <value>Chọn loại danh sách bạn muốn tạo</value>
  </data>
  <data name="Subjects.Text" xml:space="preserve">
    <value>Chủ đề</value>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>Lĩnh vực</value>
  </data>
  <data name="Name.Header" xml:space="preserve">
    <value>Tên</value>
  </data>
  <data name="ListValue.Header" xml:space="preserve">
    <value>Giá trị</value>
  </data>
  <data name="IsActive.Header" xml:space="preserve">
    <value> Đang hoạt động</value>
  </data>
  <data name="Yes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No.Text" xml:space="preserve">
    <value>STT</value>
  </data>
  <data name="MoveUp.Text" xml:space="preserve">
    <value>Chuyển lên</value>
  </data>
  <data name="MoveDown.Text" xml:space="preserve">
    <value>Chuyển xuống</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="DeleteItem.Text" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa Mục danh sách này không?</value>
  </data>
  <data name="plIsActive.Text" xml:space="preserve">
    <value> Đang hoạt động</value>
  </data>
  <data name="plListName.Text" xml:space="preserve">
    <value>Tên</value>
  </data>
  <data name="plListValue.Text" xml:space="preserve">
    <value>Giá trị</value>
  </data>
  <data name="plIsActive.Help" xml:space="preserve">
    <value>
Xác định xem mục này có hiển thị trong danh sách các mục hay không. Mục này chỉ có thể được đặt ở trạng thái không hoạt động từ mô-đun mà nó được phân bổ.</value>
  </data>
  <data name="plListName.Help" xml:space="preserve">
    <value>Tên được đặt cho Mục danh sách này</value>
  </data>
  <data name="plListValue.Help" xml:space="preserve">
    <value> Giá trị cho Mục danh sách này</value>
  </data>
  <data name="cmdSave.Text" xml:space="preserve">
    <value>Lưu</value>
  </data>
  <data name="cmdReturn.Text" xml:space="preserve">
    <value>Trở về</value>
  </data>
  <data name="valtxtBoxListName.Text" xml:space="preserve">
    <value>Tên danh sách là bắt buộc</value>
  </data>
  <data name="valtxtBoxListValue.Text" xml:space="preserve">
    <value>Giá trị danh sách là bắt buộc</value>
  </data>
  <data name="plErrorMsg.Text" xml:space="preserve">
    <value>Không thể lưu Mục danh sách phản hồi. Vui lòng đảm bảo rằng bạn không cố sử dụng cùng một Tên hai lần.</value>
  </data>
  <data name="plPortal.Help" xml:space="preserve">
    <value>Sets whether the item is available across the whole portal or just this module. This setting cannot be changed to module only when the item is being used by another module. The item can only be changed to Portal Wide from the module it is allocated to.</value>
  </data>
  <data name="plPortal.Text" xml:space="preserve">
    <value>Portal Wide</value>
  </data>
  <data name="Portal.Header" xml:space="preserve">
    <value>Portal Wide</value>
  </data>
</root>